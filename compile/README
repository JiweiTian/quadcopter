1. Getting ExtLib set up

The compiler depends on Gregory Malecha's coq-ext-lib library.
This library is included in the project, but you still have to build it.

1. Getting CompCert Set Up

Because CompCert is big, and because of licensing concerns,
I've decided not to put CompCert into the git repo (yet).
For now, do this instead:

- Download a source distribution of CompCert from
  http://compcert.inria.fr/download.html
  (I used 2.4, the newest version at time of writing)
  (2.5 has since come out, but seems to be slightly restructured;
   2.5 doesn't work with our code currently as a result, but
   we should fix this soon)

- Make sure you have Menhir installed, as compcert needs it
  (the version in the Ubuntu repos is fine;
  apt-get install menhir libmenhir-ocaml-dev
  was enough for me)

- Untar compcert, then run
  ln -s ./compcert-<vnum> ./compcert
  cd compcert
  ./configure ia32-linux
  make -j[number]
  make -j[number] clightgen

- (For the configure step, above, the platform doesn't really matter since
  we aren't going to be using compcert's platform-specific backends anyway;
  use ia32-linux if you're running Linux)
  (Also, since CompCert is big you want to use the -j flag to make
  to allow it to use multiple cores; I've heard
  -j[number of cores in your system minus one]
  is a reasonable heuristic)

- Now you should be able to build our code for C compilation!


2. Using Clightgen 

Here's how to create C files from the clight programs output by
the compiler. Hopefully we can one day make this process more
automated.

- Make sure you built clightgen in step 1. You need to also build the bytecode
  version of Clightgen in order to allow the Ocaml bytecode interpreter
  to access them:

  make -j[number] clightgen.byte

- If you run make clean, you'll end up deleting some of the files in
  compcert/_build which are needed to use the Clightgen library
